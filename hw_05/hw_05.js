//1 Разобраться, что выводит код и написать объяснение в комментарий
// let myVar;
// myVar = 5;
// let myNum;
// myNum = myVar;
// myVar = 10;
// myNum = myVar;
/* создаються 2 переменные и изменяються их значения за счет оператора присваивания */

//2. Разобраться, что выводит код и написать объяснение в комментарий

// const myVar;
// myVar = 5;
// const myNum;
// myNum = myVar;
// myVar = 10;
// myNum = myVar;

/* 1)всплывает ошибка Uncaught SyntaxError: Missing initializer in const declaration
 это происходит, если вы объявляете const без назначения.
 2) Значение констант не может быть изменено новым присваиванием, а также не может быть переопределено.
*  */

//3. Разобраться, что выводит код и написать объяснение в комментарий
let a = 123
let b = -123;
let c = "Hello";
let e = 123;

a = a + 1;
b =+ 5;
c = c + " world!"
e = e + 123;


/* вывод ошибка: Uncaught TypeError: Assignment to constant variable.
    at <anonymous>
     ошибка в переменной e. Константа - это значение, которое не может быть изменено программой во время обычного выполнения.
      Он не может измениться путем повторного присвоения и не может быть повторно объявлен.
*/

//4. Разобраться, что выводит код и написать объяснение в комментарий

let a = 0;
let b;

if (a) {
    console.log(a);
} else if (b) {
    console.log(b);
} else {
    console.log('hello world');
}

/* 1)Первое условие (если переменная равна любому числу, большему еденице), а = 0; ->
условие не выполняется -> false;
2)Второе условие (если переменная равна любому числу, большему еденице), значение b = undefined
условие не выполняется -> false;
3)переход в else, так как не какое условие из всех не выполнено
-> вывод в консоль hello world
*/

//5. Необходимо проверить на тип переменную a. Посмотреть, что выводит код и написать объяснение в комментарий

let a = "Hello world";

if (typeof a === "string") {
    console.log(a);
}

/* Оператор typeof возвращает строку, указывающую тип операнда. */

//6. Разобраться, что выводит код и написать объяснение в комментарий

let a = {};
let b = a;

alert( a == b );
alert( a === b );

/* вывод на экран окно с сообщением true (первое окно);  true (второе окно)
Операторы равенства == и строгого равенства === для объектов работают одинаково.
Два объекта равны только в том случае, если это один и тот же объект
 По коду:
 1) a - это пустой объект
 2) b - его копия, но переменная хранит не сам объект,
 а его «адрес в памяти», другими словами «ссылку» на него
 3)первый alert не строгое сравнение; true, т.к. обе переменные ссылаются на один и тот же объект
 4)второй alert строгое сравнение;
*/
